@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@1,100&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Moon+Dance&display=swap');

$goldrgb: rgb(247, 208, 32);
$whip: papayawhip;
$milk: 'Lemon-Milk';
$moonplease: 'Moon Dance', cursive;
$ugg: moccasin;

.flex {
    display: flex;

}


// * column Flex Classes
.centerYcenterXcolumn {    
    justify-content: center;    // this is the Y-axis for column.
    align-items: center;        // could see this as redundant to type over and over. the alternative could be to have {direcion: row || column} class 
    flex-direction: column;
    margin: auto;
    padding: 0;
    height: 10em;
}
.endYcenterXcolumn {
    justify-content: flex-end;
    align-items: center;
    flex-direction: column;    
}
// * column Flex Classes

// ? row Flex Classes 
.centerYcenterXrow {
    justify-content: center;
    align-items: center;
    flex-direction: row;
}
.centerYbetweenXrow {    
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
}
// ? row Flex Classes 


// * element styling (non-layout)


#HelmetCont {
    margin-top: 1.5em;
}
.GoldBar {
    height: 10em;
    width: 10em;
}

.UserText {
    font-family: $milk;    
    font-size: 22px; 
    font-weight: bold;
    color: $whip;
}

.MiniGoldBar {    
    height: 50px;
    width: 50px;
    background-image: url('/img/gold.png');    
    background-size: 25%;
    transform: rotate(45deg);
    background-repeat: no-repeat;    
    margin-top: 1.5em;
    cursor: pointer;    
}

#LoginDiv {
    background-image: url('/img/mirror.png');
    background-size: cover;
    background-repeat: no-repeat;
    height: 30em;
    width: 30em;    
}


// * elements 

// ? components
// * * * * * * * * SignupConstraints
#ConstraintGrid {
    height: 7em;
    width: 25em;
    border: 4px solid $goldrgb; 
    background-color: $whip;
    padding: 0.25em;
    display: grid;
    grid-template-areas:
    // "a b b b"
    // "a b b b"
    // "a b b b";
    "radiobuttonbox"
    "constraintText"
}

#ConstraintA {
 
    grid-area: radiobuttonbox;
}

#ConstraintA:focus {    
    background-color: $goldrgb;
}

#ConstraintA > .CheckBox {
    border: 5px solid orange;
}

#ConstraintB {
    // height: 100vh;
    // min-height: 100px;
    min-height: 4em;
    border: 4px solid $goldrgb;
    grid-area: constraintText;
    border-top: 13px dotted $ugg;
    border-bottom: 13px dotted $ugg;
    border-left: none;
    border-right: none;
}

.ConstraintText {
    font-weight: 'bold';
    font-size: '15px';
    margin: 0.25em 1em 0 1em;
}


// * * * * * * * *

// ? components

.SignupCont {
    // border: 5px solid hotpink;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    // min-height: 300px;
    min-height: 100vh;
}





.CheckBox {
    color: orange;    
}

// * checkbox code!!!!

    .checkboxcontainer {
        display: flex;
        margin: 0 2em;
    }
    
    .checkboxcontainer label {
        cursor: pointer;
        display: flex;
    
        cursor: pointer;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 14px;
        color: rgb(62, 50, 32);
        font-family: 'Josefin Sans', sans-serif;
        text-align: center;
    
    }
    
    .checkboxcontainer input[type='checkbox'] {
        cursor: pointer;
        opacity: 0;
        position: absolute;
    }
    
    .checkboxcontainer label::before {
        content: '';
        width: 1em;
        height: 1em;
        border: 0.125em solid rgb(247, 208, 32);
        border-radius: 0.125em;
    }
    
    .checkboxcontainer label:hover::before {
        content: '';
        width: 1em;
        height: 1em;
        border: 0.125em solid rgb(247, 208, 32);
        border-radius: 0.125em;
    }
    
    
    .checkboxcontainer input[type='checkbox']:disabled + label,
    .checkboxcontainer input[type='checkbox']:disabled {
        background-color: moccasin;
        -webkit-clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
                clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }
    
    .checkboxcontainer input[type='checkbox']:checked + label::before {
        content: '\002714';
        display: flex;
        justify-content: center;
        align-items: center;
        color: rgb(247, 208, 36);
    }

    .BeMine {
        margin-top: 0.125em;
        font-family: $moonplease;    
        font-size: 22px;
        color: $ugg;
        // border: 5px solid hotpink;
        span {
            // border: 5px solid hotpink;
            margin: 0 1em;
        }
        // text-decoration: underline overline dotted $goldrgb;  
        
    }
    // * checkbox code!!!!
